---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2023/6/13 18:29
---

---@class MatchBackgroundView:DisplayObjectBase
local MatchBackgroundView = Class(DisplayObjectBase)

function MatchBackgroundView:ctor(gameObject, maskGo)
    ---@type table<number, CommonSprite>
    self.mapSprite = {}
    ---@type UnityEngine.GameObject
    self.maskGo = maskGo

    self.material = Material.New(Shader.Find("Hukiry/BorderFlow"))
    self.defaultMaterial = Material.New(Shader.Find("Sprites/Default"))
    self.gameFrameBack = self:FindGameObject("gameFrame/gameFrameBack")
    self.gameFrame = self:FindTransform("gameFrame")
    self.isSetMat = false
    self.effectGo = self:FindGameObject("effectGo")
end

function MatchBackgroundView:OnStart()
    self.maskGo:SetActive(false)
    self.itemResPath = "prefab/Scene/FrameItem"
    EventDispatch:Register(self, UIEvent.Match_BackgoundMask_View, self.SetMask)
    EventDispatch:Register(self, UIEvent.Match_AI_Tip_View, self.SetMatchTip)
end

---@param coordTab table<number, UnityEngine.Vector2Int>
function MatchBackgroundView:SetMatchTip(coordTab)
    self.coordTab = coordTab or {}
    self:ShakeView()
    if coordTab then
        for _, v in ipairs(coordTab) do
            local keyName = v.x.."_"..v.y
            if  self.mapSprite[keyName] then
                self.mapSprite[keyName]:UpdateMaterial(self.material)
            end
        end
        self.isSetMat = true

    elseif self.isSetMat then
        for i, v in pairs(self.mapSprite) do
            v:UpdateMaterial(self.defaultMaterial)
        end
        self.isSetMat = false
    end
end

function MatchBackgroundView:ShakeView()
    if self.beforeConroutine then
        StopCoroutine(self.beforeConroutine)
    end

    if #self.coordTab>0 then
        for i, v in ipairs(self.coordTab) do
            EventDispatch:Broadcast(UIEvent.Match_AITip_Shake_View, v.x, v.y)
        end
        self.beforeConroutine = StartCoroutine(Handle(self, self.ContineShake))
    end
end

function MatchBackgroundView:ContineShake()
    WaitForSeconds(1)
    self:ShakeView()
end

function MatchBackgroundView:SetMask(isEnable)
    self.maskGo:SetActive(isEnable)
end

function MatchBackgroundView:OnEnable()
    for x = -MatchRule.Size, MatchRule.Size do
        for y = -MatchRule.Size, MatchRule.Size do
            local pos = Util.Map().IndexCoordToWorld(x, y)
            local go = GameObjectPool.Get(self.itemResPath, self.gameObject)
            local keyName = x.."_"..y
            go.name = keyName
            self.mapSprite[keyName] = CommonSprite.New(go.transform:GetComponent("SpriteRenderer"), Vector2.New(138,138))
            self.mapSprite[keyName]:LoadAsync("Texture/baseboard")
            self.mapSprite[keyName].transform:SetPosition(pos)
            self.mapSprite[keyName].container.sortingLayerName = "Background"
            self.mapSprite[keyName].container.color = Hukiry.HukiryUtil.StringToColor("#c2ced3")
        end
    end
end

function MatchBackgroundView:OnDisable()
    if self.beforeConroutine then
        StopCoroutine(self.beforeConroutine)
    end

    self.coordTab = {}

    for _, v in pairs(self.mapSprite) do
        GameObjectPool.Put(self.itemResPath, v.transform.parent.gameObject)
    end
    table.clear(self.mapSprite)

    EventDispatch:UnRegister(self)
end

---消耗资源
function MatchBackgroundView:OnDestroy()
    self:OnDisable()
end

return MatchBackgroundView