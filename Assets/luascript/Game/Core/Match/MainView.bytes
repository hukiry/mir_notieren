---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hp.
--- DateTime: 2021/11/20 23:31

require 'Game.Mouse.BaseMouseEvent'
require 'Game.Mouse.LevelMouseEvent'
require 'Game.Mouse.MetaMouseEvent'

---@class MainView:DisplayObjectBase
local MainView = Class(DisplayObjectBase)

function MainView:ctor(gameObject, initStep)
    ---@type InitializeLoadingStep
    self.initFinish = initStep

    self.views = {}
    ---初始化属性
    self:OnStart()
    self:OnEnable()
end

---初始化子视图，执行一次
function MainView:OnStart()
    ---初始化地图网格，物品，云视图。
    local mapGo, cameraGo = self:FindGameObject("Map"), self:FindGameObject("WorldCamera")
    if SceneRule.CurSceneType == SceneType.MetaCity then
        --元宇宙地图编辑 视图+鼠标
        local homeView = require("Game.Core.Meta.View.MetaView").New(mapGo, self:FindGameObject("lineMap"))
        table.insert(self.views, MetaMouseEvent.New(cameraGo))---元宇宙相机
        table.insert(self.views, homeView)---地图物品
    else
        --普通和活动关卡 视图+背景+鼠标
        local frameGo, maskGo = self:FindGameObject("frame"), self:FindGameObject("mask")
        local frameView = require("Game.Core.Match.View.MatchBackgroundView").New(frameGo, maskGo)
        table.insert(self.views, frameView)---地图背景
        local homeView = require("Game.Core.Match.View.MatchView").New(mapGo)
        table.insert(self.views, LevelMouseEvent.New(cameraGo))---关卡相机
        table.insert(self.views, homeView)---地图物品

        ---@type LoadMapAnimation
        self.mapAni = require('Game.Core.Match.View.Effect.LoadMapAnimation').New(homeView, frameView)--动画
    end

    for _, v in ipairs(self.views) do
        if v.OnStart then v:OnStart() end
    end
end

---每次显示视图：初始化对象，注册事件，计时器
function MainView:OnEnable()
    for i, v in ipairs(self.views) do
        if v.OnEnable then v:OnEnable() end
    end

    local _count = 10
    Single.TimerManger():DoFrame(self, function(_self, count)
        self.initFinish:SetProgress((_count - count) / 10)
        if count == 0 then
            self.initFinish:SetDone()
            self.mapAni:OnEnable()
        end
    end, 1, _count)
end

---每次隐藏视图：撤销事件，回收对象池，撤销计时器
function MainView:OnDisable()
    for i, v in ipairs(self.views) do
        if v.OnDisable then v:OnDisable() end
    end

    self.mapAni:OnDisable()
end

---消耗资源
function MainView:OnDestroy()
    self:OnDisable()
    for i, v in ipairs(self.views) do
        if v.OnDestroy then v:OnDestroy() end
    end
end

return MainView