//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Hukiry_UI_MeshGraphicWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Hukiry.UI.MeshGraphic), typeof(UnityEngine.UI.MaskableGraphic));
		L.RegFunction("LoadMesh", LoadMesh);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("overridePostion", get_overridePostion, set_overridePostion);
		L.RegVar("overrideRotation", get_overrideRotation, set_overrideRotation);
		L.RegVar("overrideScale", get_overrideScale, set_overrideScale);
		L.RegVar("mainTexture", get_mainTexture, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadMesh(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Hukiry.UI.MeshGraphic obj = (Hukiry.UI.MeshGraphic)ToLua.CheckObject<Hukiry.UI.MeshGraphic>(L, 1);
			UnityEngine.U2D.SpriteAtlas arg0 = (UnityEngine.U2D.SpriteAtlas)ToLua.CheckObject<UnityEngine.U2D.SpriteAtlas>(L, 2);
			SpriteMeshInfo[] arg1 = ToLua.CheckStructArray<SpriteMeshInfo>(L, 3);
			obj.LoadMesh(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_overridePostion(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Hukiry.UI.MeshGraphic obj = (Hukiry.UI.MeshGraphic)o;
			UnityEngine.Vector3 ret = obj.overridePostion;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index overridePostion on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_overrideRotation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Hukiry.UI.MeshGraphic obj = (Hukiry.UI.MeshGraphic)o;
			UnityEngine.Vector3 ret = obj.overrideRotation;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index overrideRotation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_overrideScale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Hukiry.UI.MeshGraphic obj = (Hukiry.UI.MeshGraphic)o;
			UnityEngine.Vector3 ret = obj.overrideScale;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index overrideScale on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mainTexture(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Hukiry.UI.MeshGraphic obj = (Hukiry.UI.MeshGraphic)o;
			UnityEngine.Texture ret = obj.mainTexture;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index mainTexture on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_overridePostion(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Hukiry.UI.MeshGraphic obj = (Hukiry.UI.MeshGraphic)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.overridePostion = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index overridePostion on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_overrideRotation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Hukiry.UI.MeshGraphic obj = (Hukiry.UI.MeshGraphic)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.overrideRotation = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index overrideRotation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_overrideScale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Hukiry.UI.MeshGraphic obj = (Hukiry.UI.MeshGraphic)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.overrideScale = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index overrideScale on a nil value");
		}
	}
}

