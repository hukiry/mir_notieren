//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Hukiry_SDK_MobileNotificationWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Hukiry.SDK.MobileNotification), typeof(System.Object));
		L.RegFunction("StartNotification", StartNotification);
		L.RegFunction("CancelNotifications", CancelNotifications);
		L.RegFunction("GetTimeSecond", GetTimeSecond);
		L.RegFunction("New", _CreateHukiry_SDK_MobileNotification);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateHukiry_SDK_MobileNotification(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Hukiry.SDK.MobileNotification obj = new Hukiry.SDK.MobileNotification();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Hukiry.SDK.MobileNotification.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartNotification(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				long arg2 = LuaDLL.tolua_checkint64(L, 3);
				Hukiry.SDK.MobileNotification.StartNotification(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				long arg2 = LuaDLL.tolua_checkint64(L, 3);
				string arg3 = ToLua.CheckString(L, 4);
				Hukiry.SDK.MobileNotification.StartNotification(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Hukiry.SDK.MobileNotification.StartNotification");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CancelNotifications(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Hukiry.SDK.MobileNotification.CancelNotifications();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTimeSecond(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			long o = Hukiry.SDK.MobileNotification.GetTimeSecond(arg0);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

