//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_GraphicsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("Graphics");
		L.RegFunction("ClearRandomWriteTargets", ClearRandomWriteTargets);
		L.RegFunction("ExecuteCommandBuffer", ExecuteCommandBuffer);
		L.RegFunction("ExecuteCommandBufferAsync", ExecuteCommandBufferAsync);
		L.RegFunction("SetRenderTarget", SetRenderTarget);
		L.RegFunction("SetRandomWriteTarget", SetRandomWriteTarget);
		L.RegFunction("CopyTexture", CopyTexture);
		L.RegFunction("ConvertTexture", ConvertTexture);
		L.RegFunction("CreateAsyncGraphicsFence", CreateAsyncGraphicsFence);
		L.RegFunction("CreateGraphicsFence", CreateGraphicsFence);
		L.RegFunction("WaitOnAsyncGraphicsFence", WaitOnAsyncGraphicsFence);
		L.RegFunction("DrawTexture", DrawTexture);
		L.RegFunction("DrawMeshNow", DrawMeshNow);
		L.RegFunction("DrawMesh", DrawMesh);
		L.RegFunction("DrawMeshInstanced", DrawMeshInstanced);
		L.RegFunction("DrawMeshInstancedProcedural", DrawMeshInstancedProcedural);
		L.RegFunction("DrawMeshInstancedIndirect", DrawMeshInstancedIndirect);
		L.RegFunction("DrawProceduralNow", DrawProceduralNow);
		L.RegFunction("DrawProceduralIndirectNow", DrawProceduralIndirectNow);
		L.RegFunction("DrawProcedural", DrawProcedural);
		L.RegFunction("DrawProceduralIndirect", DrawProceduralIndirect);
		L.RegFunction("Blit", Blit);
		L.RegFunction("BlitMultiTap", BlitMultiTap);
		L.RegVar("activeColorGamut", get_activeColorGamut, null);
		L.RegVar("activeTier", get_activeTier, set_activeTier);
		L.RegVar("preserveFramebufferAlpha", get_preserveFramebufferAlpha, null);
		L.RegVar("activeColorBuffer", get_activeColorBuffer, null);
		L.RegVar("activeDepthBuffer", get_activeDepthBuffer, null);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearRandomWriteTargets(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			UnityEngine.Graphics.ClearRandomWriteTargets();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ExecuteCommandBuffer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Rendering.CommandBuffer arg0 = (UnityEngine.Rendering.CommandBuffer)ToLua.CheckObject<UnityEngine.Rendering.CommandBuffer>(L, 1);
			UnityEngine.Graphics.ExecuteCommandBuffer(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ExecuteCommandBufferAsync(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Rendering.CommandBuffer arg0 = (UnityEngine.Rendering.CommandBuffer)ToLua.CheckObject<UnityEngine.Rendering.CommandBuffer>(L, 1);
			UnityEngine.Rendering.ComputeQueueType arg1 = (UnityEngine.Rendering.ComputeQueueType)ToLua.CheckObject(L, 2, typeof(UnityEngine.Rendering.ComputeQueueType));
			UnityEngine.Graphics.ExecuteCommandBufferAsync(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetRenderTarget(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1 && TypeChecker.CheckTypes<UnityEngine.RenderTargetSetup>(L, 1))
			{
				UnityEngine.RenderTargetSetup arg0 = StackTraits<UnityEngine.RenderTargetSetup>.To(L, 1);
				UnityEngine.Graphics.SetRenderTarget(arg0);
				return 0;
			}
			else if (count == 1 && TypeChecker.CheckTypes<UnityEngine.RenderTexture>(L, 1))
			{
				UnityEngine.RenderTexture arg0 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 1);
				UnityEngine.Graphics.SetRenderTarget(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<UnityEngine.RenderTexture, int>(L, 1))
			{
				UnityEngine.RenderTexture arg0 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Graphics.SetRenderTarget(arg0, arg1);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<UnityEngine.RenderBuffer[], UnityEngine.RenderBuffer>(L, 1))
			{
				UnityEngine.RenderBuffer[] arg0 = ToLua.ToStructArray<UnityEngine.RenderBuffer>(L, 1);
				UnityEngine.RenderBuffer arg1 = StackTraits<UnityEngine.RenderBuffer>.To(L, 2);
				UnityEngine.Graphics.SetRenderTarget(arg0, arg1);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<UnityEngine.RenderBuffer, UnityEngine.RenderBuffer>(L, 1))
			{
				UnityEngine.RenderBuffer arg0 = StackTraits<UnityEngine.RenderBuffer>.To(L, 1);
				UnityEngine.RenderBuffer arg1 = StackTraits<UnityEngine.RenderBuffer>.To(L, 2);
				UnityEngine.Graphics.SetRenderTarget(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<UnityEngine.RenderTexture, int, UnityEngine.CubemapFace>(L, 1))
			{
				UnityEngine.RenderTexture arg0 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.CubemapFace arg2 = (UnityEngine.CubemapFace)ToLua.ToObject(L, 3);
				UnityEngine.Graphics.SetRenderTarget(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<UnityEngine.RenderBuffer, UnityEngine.RenderBuffer, int>(L, 1))
			{
				UnityEngine.RenderBuffer arg0 = StackTraits<UnityEngine.RenderBuffer>.To(L, 1);
				UnityEngine.RenderBuffer arg1 = StackTraits<UnityEngine.RenderBuffer>.To(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.Graphics.SetRenderTarget(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<UnityEngine.RenderTexture, int, UnityEngine.CubemapFace, int>(L, 1))
			{
				UnityEngine.RenderTexture arg0 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.CubemapFace arg2 = (UnityEngine.CubemapFace)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Graphics.SetRenderTarget(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<UnityEngine.RenderBuffer, UnityEngine.RenderBuffer, int, UnityEngine.CubemapFace>(L, 1))
			{
				UnityEngine.RenderBuffer arg0 = StackTraits<UnityEngine.RenderBuffer>.To(L, 1);
				UnityEngine.RenderBuffer arg1 = StackTraits<UnityEngine.RenderBuffer>.To(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.CubemapFace arg3 = (UnityEngine.CubemapFace)ToLua.ToObject(L, 4);
				UnityEngine.Graphics.SetRenderTarget(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 5)
			{
				UnityEngine.RenderBuffer arg0 = StackTraits<UnityEngine.RenderBuffer>.Check(L, 1);
				UnityEngine.RenderBuffer arg1 = StackTraits<UnityEngine.RenderBuffer>.Check(L, 2);
				int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
				UnityEngine.CubemapFace arg3 = (UnityEngine.CubemapFace)ToLua.CheckObject(L, 4, typeof(UnityEngine.CubemapFace));
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				UnityEngine.Graphics.SetRenderTarget(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.SetRenderTarget");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetRandomWriteTarget(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<UnityEngine.RenderTexture>(L, 2))
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 2);
				UnityEngine.Graphics.SetRandomWriteTarget(arg0, arg1);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<UnityEngine.ComputeBuffer>(L, 2))
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				UnityEngine.ComputeBuffer arg1 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 2);
				UnityEngine.Graphics.SetRandomWriteTarget(arg0, arg1);
				return 0;
			}
			else if (count == 3)
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				UnityEngine.ComputeBuffer arg1 = (UnityEngine.ComputeBuffer)ToLua.CheckObject(L, 2, typeof(UnityEngine.ComputeBuffer));
				bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
				UnityEngine.Graphics.SetRandomWriteTarget(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.SetRandomWriteTarget");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CopyTexture(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 2);
				UnityEngine.Graphics.CopyTexture(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 1);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Texture arg2 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 3);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				UnityEngine.Graphics.CopyTexture(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 6)
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 1);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
				UnityEngine.Texture arg3 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				UnityEngine.Graphics.CopyTexture(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 12)
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 1);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				int arg6 = (int)LuaDLL.luaL_checknumber(L, 7);
				UnityEngine.Texture arg7 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 8);
				int arg8 = (int)LuaDLL.luaL_checknumber(L, 9);
				int arg9 = (int)LuaDLL.luaL_checknumber(L, 10);
				int arg10 = (int)LuaDLL.luaL_checknumber(L, 11);
				int arg11 = (int)LuaDLL.luaL_checknumber(L, 12);
				UnityEngine.Graphics.CopyTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.CopyTexture");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ConvertTexture(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 2);
				bool o = UnityEngine.Graphics.ConvertTexture(arg0, arg1);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 4)
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 1);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Texture arg2 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 3);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				bool o = UnityEngine.Graphics.ConvertTexture(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.ConvertTexture");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateAsyncGraphicsFence(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UnityEngine.Rendering.GraphicsFence o = UnityEngine.Graphics.CreateAsyncGraphicsFence();
				ToLua.PushValue(L, o);
				return 1;
			}
			else if (count == 1)
			{
				UnityEngine.Rendering.SynchronisationStage arg0 = (UnityEngine.Rendering.SynchronisationStage)ToLua.CheckObject(L, 1, typeof(UnityEngine.Rendering.SynchronisationStage));
				UnityEngine.Rendering.GraphicsFence o = UnityEngine.Graphics.CreateAsyncGraphicsFence(arg0);
				ToLua.PushValue(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.CreateAsyncGraphicsFence");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateGraphicsFence(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Rendering.GraphicsFenceType arg0 = (UnityEngine.Rendering.GraphicsFenceType)ToLua.CheckObject(L, 1, typeof(UnityEngine.Rendering.GraphicsFenceType));
			UnityEngine.Rendering.SynchronisationStageFlags arg1 = (UnityEngine.Rendering.SynchronisationStageFlags)ToLua.CheckObject(L, 2, typeof(UnityEngine.Rendering.SynchronisationStageFlags));
			UnityEngine.Rendering.GraphicsFence o = UnityEngine.Graphics.CreateGraphicsFence(arg0, arg1);
			ToLua.PushValue(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WaitOnAsyncGraphicsFence(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				UnityEngine.Rendering.GraphicsFence arg0 = StackTraits<UnityEngine.Rendering.GraphicsFence>.Check(L, 1);
				UnityEngine.Graphics.WaitOnAsyncGraphicsFence(arg0);
				return 0;
			}
			else if (count == 2)
			{
				UnityEngine.Rendering.GraphicsFence arg0 = StackTraits<UnityEngine.Rendering.GraphicsFence>.Check(L, 1);
				UnityEngine.Rendering.SynchronisationStage arg1 = (UnityEngine.Rendering.SynchronisationStage)ToLua.CheckObject(L, 2, typeof(UnityEngine.Rendering.SynchronisationStage));
				UnityEngine.Graphics.WaitOnAsyncGraphicsFence(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.WaitOnAsyncGraphicsFence");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawTexture(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 2);
				UnityEngine.Graphics.DrawTexture(arg0, arg1);
				return 0;
			}
			else if (count == 3)
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4)
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 6)
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 2);
				int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes<int, int, int, int, UnityEngine.Material>(L, 3))
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.Material arg6 = (UnityEngine.Material)ToLua.ToObject(L, 7);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes<UnityEngine.Rect, int, int, int, int>(L, 3))
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 2);
				UnityEngine.Rect arg2 = StackTraits<UnityEngine.Rect>.To(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes<int, int, int, int, UnityEngine.Material, int>(L, 3))
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.Material arg6 = (UnityEngine.Material)ToLua.ToObject(L, 7);
				int arg7 = (int)LuaDLL.lua_tonumber(L, 8);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes<UnityEngine.Rect, int, int, int, int, UnityEngine.Color>(L, 3))
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 2);
				UnityEngine.Rect arg2 = StackTraits<UnityEngine.Rect>.To(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.Color arg7 = ToLua.ToColor(L, 8);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes<UnityEngine.Rect, int, int, int, int, UnityEngine.Material>(L, 3))
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 2);
				UnityEngine.Rect arg2 = StackTraits<UnityEngine.Rect>.To(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.Material arg7 = (UnityEngine.Material)ToLua.ToObject(L, 8);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes<UnityEngine.Material, int>(L, 8))
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 2);
				UnityEngine.Rect arg2 = StackTraits<UnityEngine.Rect>.Check(L, 3);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				int arg6 = (int)LuaDLL.luaL_checknumber(L, 7);
				UnityEngine.Material arg7 = (UnityEngine.Material)ToLua.ToObject(L, 8);
				int arg8 = (int)LuaDLL.lua_tonumber(L, 9);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes<UnityEngine.Color, UnityEngine.Material>(L, 8))
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 2);
				UnityEngine.Rect arg2 = StackTraits<UnityEngine.Rect>.Check(L, 3);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				int arg6 = (int)LuaDLL.luaL_checknumber(L, 7);
				UnityEngine.Color arg7 = ToLua.ToColor(L, 8);
				UnityEngine.Material arg8 = (UnityEngine.Material)ToLua.ToObject(L, 9);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
				return 0;
			}
			else if (count == 10)
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 2);
				UnityEngine.Rect arg2 = StackTraits<UnityEngine.Rect>.Check(L, 3);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				int arg6 = (int)LuaDLL.luaL_checknumber(L, 7);
				UnityEngine.Color arg7 = ToLua.ToColor(L, 8);
				UnityEngine.Material arg8 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 9);
				int arg9 = (int)LuaDLL.luaL_checknumber(L, 10);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawTexture");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawMeshNow(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.Check(L, 2);
				UnityEngine.Graphics.DrawMeshNow(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<UnityEngine.Matrix4x4, int>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.Graphics.DrawMeshNow(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<UnityEngine.Vector3, UnityEngine.Quaternion>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Graphics.DrawMeshNow(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				UnityEngine.Graphics.DrawMeshNow(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawMeshNow");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawMesh(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.Check(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes<UnityEngine.Matrix4x4, UnityEngine.Material, int, UnityEngine.Camera>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes<UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Material, int>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes<UnityEngine.Matrix4x4, UnityEngine.Material, int, UnityEngine.Camera, int>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes<UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Material, int, UnityEngine.Camera>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes<UnityEngine.Matrix4x4, UnityEngine.Material, int, UnityEngine.Camera, int, UnityEngine.MaterialPropertyBlock>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes<UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Material, int, UnityEngine.Camera, int>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes<UnityEngine.Matrix4x4, UnityEngine.Material, int, UnityEngine.Camera, int, UnityEngine.MaterialPropertyBlock, bool>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				bool arg7 = LuaDLL.lua_toboolean(L, 8);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes<UnityEngine.Matrix4x4, UnityEngine.Material, int, UnityEngine.Camera, int, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 8);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes<UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Material, int, UnityEngine.Camera, int, UnityEngine.MaterialPropertyBlock>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes<UnityEngine.Matrix4x4, UnityEngine.Material, int, UnityEngine.Camera, int, UnityEngine.MaterialPropertyBlock, bool, bool>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				bool arg7 = LuaDLL.lua_toboolean(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes<UnityEngine.Matrix4x4, UnityEngine.Material, int, UnityEngine.Camera, int, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes<UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Material, int, UnityEngine.Camera, int, UnityEngine.MaterialPropertyBlock, bool>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes<UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Material, int, UnityEngine.Camera, int, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				UnityEngine.Rendering.ShadowCastingMode arg8 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 9);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
				return 0;
			}
			else if (count == 10 && TypeChecker.CheckTypes<UnityEngine.Matrix4x4, UnityEngine.Material, int, UnityEngine.Camera, int, UnityEngine.MaterialPropertyBlock, bool, bool, bool>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				bool arg7 = LuaDLL.lua_toboolean(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				bool arg9 = LuaDLL.lua_toboolean(L, 10);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
				return 0;
			}
			else if (count == 10 && TypeChecker.CheckTypes<UnityEngine.Matrix4x4, UnityEngine.Material, int, UnityEngine.Camera, int, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool, UnityEngine.Transform>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				UnityEngine.Transform arg9 = (UnityEngine.Transform)ToLua.ToObject(L, 10);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
				return 0;
			}
			else if (count == 10 && TypeChecker.CheckTypes<UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Material, int, UnityEngine.Camera, int, UnityEngine.MaterialPropertyBlock, bool, bool>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				bool arg9 = LuaDLL.lua_toboolean(L, 10);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
				return 0;
			}
			else if (count == 10 && TypeChecker.CheckTypes<UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Material, int, UnityEngine.Camera, int, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				UnityEngine.Rendering.ShadowCastingMode arg8 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 9);
				bool arg9 = LuaDLL.lua_toboolean(L, 10);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
				return 0;
			}
			else if (count == 11 && TypeChecker.CheckTypes<UnityEngine.Matrix4x4, UnityEngine.Material, int, UnityEngine.Camera, int, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool, UnityEngine.Transform, bool>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				UnityEngine.Transform arg9 = (UnityEngine.Transform)ToLua.ToObject(L, 10);
				bool arg10 = LuaDLL.lua_toboolean(L, 11);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
				return 0;
			}
			else if (count == 11 && TypeChecker.CheckTypes<UnityEngine.Matrix4x4, UnityEngine.Material, int, UnityEngine.Camera, int, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool, UnityEngine.Transform, UnityEngine.Rendering.LightProbeUsage>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				UnityEngine.Transform arg9 = (UnityEngine.Transform)ToLua.ToObject(L, 10);
				UnityEngine.Rendering.LightProbeUsage arg10 = (UnityEngine.Rendering.LightProbeUsage)ToLua.ToObject(L, 11);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
				return 0;
			}
			else if (count == 11 && TypeChecker.CheckTypes<UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Material, int, UnityEngine.Camera, int, UnityEngine.MaterialPropertyBlock, bool, bool, bool>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				bool arg9 = LuaDLL.lua_toboolean(L, 10);
				bool arg10 = LuaDLL.lua_toboolean(L, 11);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
				return 0;
			}
			else if (count == 11 && TypeChecker.CheckTypes<UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Material, int, UnityEngine.Camera, int, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool, UnityEngine.Transform>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				UnityEngine.Rendering.ShadowCastingMode arg8 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 9);
				bool arg9 = LuaDLL.lua_toboolean(L, 10);
				UnityEngine.Transform arg10 = (UnityEngine.Transform)ToLua.ToObject(L, 11);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
				return 0;
			}
			else if (count == 12 && TypeChecker.CheckTypes<UnityEngine.Matrix4x4, UnityEngine.Material, int, UnityEngine.Camera, int, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool, UnityEngine.Transform, UnityEngine.Rendering.LightProbeUsage, UnityEngine.LightProbeProxyVolume>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				UnityEngine.Transform arg9 = (UnityEngine.Transform)ToLua.ToObject(L, 10);
				UnityEngine.Rendering.LightProbeUsage arg10 = (UnityEngine.Rendering.LightProbeUsage)ToLua.ToObject(L, 11);
				UnityEngine.LightProbeProxyVolume arg11 = (UnityEngine.LightProbeProxyVolume)ToLua.ToObject(L, 12);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
				return 0;
			}
			else if (count == 12 && TypeChecker.CheckTypes<UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Material, int, UnityEngine.Camera, int, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool, UnityEngine.Transform, bool>(L, 2))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				UnityEngine.Rendering.ShadowCastingMode arg8 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 9);
				bool arg9 = LuaDLL.lua_toboolean(L, 10);
				UnityEngine.Transform arg10 = (UnityEngine.Transform)ToLua.ToObject(L, 11);
				bool arg11 = LuaDLL.lua_toboolean(L, 12);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawMesh");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawMeshInstanced(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4 && TypeChecker.CheckTypes<UnityEngine.Matrix4x4[]>(L, 4))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Matrix4x4[] arg3 = ToLua.ToStructArray<UnityEngine.Matrix4x4>(L, 4);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<System.Collections.Generic.List<UnityEngine.Matrix4x4>>(L, 4))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				System.Collections.Generic.List<UnityEngine.Matrix4x4> arg3 = (System.Collections.Generic.List<UnityEngine.Matrix4x4>)ToLua.ToObject(L, 4);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes<UnityEngine.Matrix4x4[], int>(L, 4))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Matrix4x4[] arg3 = ToLua.ToStructArray<UnityEngine.Matrix4x4>(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes<System.Collections.Generic.List<UnityEngine.Matrix4x4>, UnityEngine.MaterialPropertyBlock>(L, 4))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				System.Collections.Generic.List<UnityEngine.Matrix4x4> arg3 = (System.Collections.Generic.List<UnityEngine.Matrix4x4>)ToLua.ToObject(L, 4);
				UnityEngine.MaterialPropertyBlock arg4 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 5);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes<UnityEngine.Matrix4x4[], int, UnityEngine.MaterialPropertyBlock>(L, 4))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Matrix4x4[] arg3 = ToLua.ToStructArray<UnityEngine.Matrix4x4>(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 6);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes<System.Collections.Generic.List<UnityEngine.Matrix4x4>, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode>(L, 4))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				System.Collections.Generic.List<UnityEngine.Matrix4x4> arg3 = (System.Collections.Generic.List<UnityEngine.Matrix4x4>)ToLua.ToObject(L, 4);
				UnityEngine.MaterialPropertyBlock arg4 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 5);
				UnityEngine.Rendering.ShadowCastingMode arg5 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 6);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes<UnityEngine.Matrix4x4[], int, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode>(L, 4))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Matrix4x4[] arg3 = ToLua.ToStructArray<UnityEngine.Matrix4x4>(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 6);
				UnityEngine.Rendering.ShadowCastingMode arg6 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 7);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes<System.Collections.Generic.List<UnityEngine.Matrix4x4>, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool>(L, 4))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				System.Collections.Generic.List<UnityEngine.Matrix4x4> arg3 = (System.Collections.Generic.List<UnityEngine.Matrix4x4>)ToLua.ToObject(L, 4);
				UnityEngine.MaterialPropertyBlock arg4 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 5);
				UnityEngine.Rendering.ShadowCastingMode arg5 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 6);
				bool arg6 = LuaDLL.lua_toboolean(L, 7);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes<UnityEngine.Matrix4x4[], int, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool>(L, 4))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Matrix4x4[] arg3 = ToLua.ToStructArray<UnityEngine.Matrix4x4>(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 6);
				UnityEngine.Rendering.ShadowCastingMode arg6 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 7);
				bool arg7 = LuaDLL.lua_toboolean(L, 8);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes<System.Collections.Generic.List<UnityEngine.Matrix4x4>, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool, int>(L, 4))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				System.Collections.Generic.List<UnityEngine.Matrix4x4> arg3 = (System.Collections.Generic.List<UnityEngine.Matrix4x4>)ToLua.ToObject(L, 4);
				UnityEngine.MaterialPropertyBlock arg4 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 5);
				UnityEngine.Rendering.ShadowCastingMode arg5 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 6);
				bool arg6 = LuaDLL.lua_toboolean(L, 7);
				int arg7 = (int)LuaDLL.lua_tonumber(L, 8);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes<UnityEngine.Matrix4x4[], int, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool, int>(L, 4))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Matrix4x4[] arg3 = ToLua.ToStructArray<UnityEngine.Matrix4x4>(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 6);
				UnityEngine.Rendering.ShadowCastingMode arg6 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 7);
				bool arg7 = LuaDLL.lua_toboolean(L, 8);
				int arg8 = (int)LuaDLL.lua_tonumber(L, 9);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes<System.Collections.Generic.List<UnityEngine.Matrix4x4>, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool, int, UnityEngine.Camera>(L, 4))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				System.Collections.Generic.List<UnityEngine.Matrix4x4> arg3 = (System.Collections.Generic.List<UnityEngine.Matrix4x4>)ToLua.ToObject(L, 4);
				UnityEngine.MaterialPropertyBlock arg4 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 5);
				UnityEngine.Rendering.ShadowCastingMode arg5 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 6);
				bool arg6 = LuaDLL.lua_toboolean(L, 7);
				int arg7 = (int)LuaDLL.lua_tonumber(L, 8);
				UnityEngine.Camera arg8 = (UnityEngine.Camera)ToLua.ToObject(L, 9);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
				return 0;
			}
			else if (count == 10 && TypeChecker.CheckTypes<UnityEngine.Matrix4x4[], int, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool, int, UnityEngine.Camera>(L, 4))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Matrix4x4[] arg3 = ToLua.ToStructArray<UnityEngine.Matrix4x4>(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 6);
				UnityEngine.Rendering.ShadowCastingMode arg6 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 7);
				bool arg7 = LuaDLL.lua_toboolean(L, 8);
				int arg8 = (int)LuaDLL.lua_tonumber(L, 9);
				UnityEngine.Camera arg9 = (UnityEngine.Camera)ToLua.ToObject(L, 10);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
				return 0;
			}
			else if (count == 10 && TypeChecker.CheckTypes<System.Collections.Generic.List<UnityEngine.Matrix4x4>, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool, int, UnityEngine.Camera, UnityEngine.Rendering.LightProbeUsage>(L, 4))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				System.Collections.Generic.List<UnityEngine.Matrix4x4> arg3 = (System.Collections.Generic.List<UnityEngine.Matrix4x4>)ToLua.ToObject(L, 4);
				UnityEngine.MaterialPropertyBlock arg4 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 5);
				UnityEngine.Rendering.ShadowCastingMode arg5 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 6);
				bool arg6 = LuaDLL.lua_toboolean(L, 7);
				int arg7 = (int)LuaDLL.lua_tonumber(L, 8);
				UnityEngine.Camera arg8 = (UnityEngine.Camera)ToLua.ToObject(L, 9);
				UnityEngine.Rendering.LightProbeUsage arg9 = (UnityEngine.Rendering.LightProbeUsage)ToLua.ToObject(L, 10);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
				return 0;
			}
			else if (count == 11 && TypeChecker.CheckTypes<UnityEngine.Matrix4x4[], int, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool, int, UnityEngine.Camera, UnityEngine.Rendering.LightProbeUsage>(L, 4))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Matrix4x4[] arg3 = ToLua.ToStructArray<UnityEngine.Matrix4x4>(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 6);
				UnityEngine.Rendering.ShadowCastingMode arg6 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 7);
				bool arg7 = LuaDLL.lua_toboolean(L, 8);
				int arg8 = (int)LuaDLL.lua_tonumber(L, 9);
				UnityEngine.Camera arg9 = (UnityEngine.Camera)ToLua.ToObject(L, 10);
				UnityEngine.Rendering.LightProbeUsage arg10 = (UnityEngine.Rendering.LightProbeUsage)ToLua.ToObject(L, 11);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
				return 0;
			}
			else if (count == 11 && TypeChecker.CheckTypes<System.Collections.Generic.List<UnityEngine.Matrix4x4>, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool, int, UnityEngine.Camera, UnityEngine.Rendering.LightProbeUsage, UnityEngine.LightProbeProxyVolume>(L, 4))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				System.Collections.Generic.List<UnityEngine.Matrix4x4> arg3 = (System.Collections.Generic.List<UnityEngine.Matrix4x4>)ToLua.ToObject(L, 4);
				UnityEngine.MaterialPropertyBlock arg4 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 5);
				UnityEngine.Rendering.ShadowCastingMode arg5 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 6);
				bool arg6 = LuaDLL.lua_toboolean(L, 7);
				int arg7 = (int)LuaDLL.lua_tonumber(L, 8);
				UnityEngine.Camera arg8 = (UnityEngine.Camera)ToLua.ToObject(L, 9);
				UnityEngine.Rendering.LightProbeUsage arg9 = (UnityEngine.Rendering.LightProbeUsage)ToLua.ToObject(L, 10);
				UnityEngine.LightProbeProxyVolume arg10 = (UnityEngine.LightProbeProxyVolume)ToLua.ToObject(L, 11);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
				return 0;
			}
			else if (count == 12)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Matrix4x4[] arg3 = ToLua.CheckStructArray<UnityEngine.Matrix4x4>(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject(L, 6, typeof(UnityEngine.MaterialPropertyBlock));
				UnityEngine.Rendering.ShadowCastingMode arg6 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.CheckObject(L, 7, typeof(UnityEngine.Rendering.ShadowCastingMode));
				bool arg7 = LuaDLL.luaL_checkboolean(L, 8);
				int arg8 = (int)LuaDLL.luaL_checknumber(L, 9);
				UnityEngine.Camera arg9 = (UnityEngine.Camera)ToLua.CheckObject(L, 10, typeof(UnityEngine.Camera));
				UnityEngine.Rendering.LightProbeUsage arg10 = (UnityEngine.Rendering.LightProbeUsage)ToLua.CheckObject(L, 11, typeof(UnityEngine.Rendering.LightProbeUsage));
				UnityEngine.LightProbeProxyVolume arg11 = (UnityEngine.LightProbeProxyVolume)ToLua.CheckObject(L, 12, typeof(UnityEngine.LightProbeProxyVolume));
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawMeshInstanced");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawMeshInstancedProcedural(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 5)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Bounds arg3 = ToLua.ToBounds(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				UnityEngine.Graphics.DrawMeshInstancedProcedural(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 6)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Bounds arg3 = ToLua.ToBounds(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject(L, 6, typeof(UnityEngine.MaterialPropertyBlock));
				UnityEngine.Graphics.DrawMeshInstancedProcedural(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 7)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Bounds arg3 = ToLua.ToBounds(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject(L, 6, typeof(UnityEngine.MaterialPropertyBlock));
				UnityEngine.Rendering.ShadowCastingMode arg6 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.CheckObject(L, 7, typeof(UnityEngine.Rendering.ShadowCastingMode));
				UnityEngine.Graphics.DrawMeshInstancedProcedural(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 8)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Bounds arg3 = ToLua.ToBounds(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject(L, 6, typeof(UnityEngine.MaterialPropertyBlock));
				UnityEngine.Rendering.ShadowCastingMode arg6 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.CheckObject(L, 7, typeof(UnityEngine.Rendering.ShadowCastingMode));
				bool arg7 = LuaDLL.luaL_checkboolean(L, 8);
				UnityEngine.Graphics.DrawMeshInstancedProcedural(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else if (count == 9)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Bounds arg3 = ToLua.ToBounds(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject(L, 6, typeof(UnityEngine.MaterialPropertyBlock));
				UnityEngine.Rendering.ShadowCastingMode arg6 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.CheckObject(L, 7, typeof(UnityEngine.Rendering.ShadowCastingMode));
				bool arg7 = LuaDLL.luaL_checkboolean(L, 8);
				int arg8 = (int)LuaDLL.luaL_checknumber(L, 9);
				UnityEngine.Graphics.DrawMeshInstancedProcedural(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
				return 0;
			}
			else if (count == 10)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Bounds arg3 = ToLua.ToBounds(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject(L, 6, typeof(UnityEngine.MaterialPropertyBlock));
				UnityEngine.Rendering.ShadowCastingMode arg6 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.CheckObject(L, 7, typeof(UnityEngine.Rendering.ShadowCastingMode));
				bool arg7 = LuaDLL.luaL_checkboolean(L, 8);
				int arg8 = (int)LuaDLL.luaL_checknumber(L, 9);
				UnityEngine.Camera arg9 = (UnityEngine.Camera)ToLua.CheckObject(L, 10, typeof(UnityEngine.Camera));
				UnityEngine.Graphics.DrawMeshInstancedProcedural(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
				return 0;
			}
			else if (count == 11)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Bounds arg3 = ToLua.ToBounds(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject(L, 6, typeof(UnityEngine.MaterialPropertyBlock));
				UnityEngine.Rendering.ShadowCastingMode arg6 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.CheckObject(L, 7, typeof(UnityEngine.Rendering.ShadowCastingMode));
				bool arg7 = LuaDLL.luaL_checkboolean(L, 8);
				int arg8 = (int)LuaDLL.luaL_checknumber(L, 9);
				UnityEngine.Camera arg9 = (UnityEngine.Camera)ToLua.CheckObject(L, 10, typeof(UnityEngine.Camera));
				UnityEngine.Rendering.LightProbeUsage arg10 = (UnityEngine.Rendering.LightProbeUsage)ToLua.CheckObject(L, 11, typeof(UnityEngine.Rendering.LightProbeUsage));
				UnityEngine.Graphics.DrawMeshInstancedProcedural(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
				return 0;
			}
			else if (count == 12)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Bounds arg3 = ToLua.ToBounds(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject(L, 6, typeof(UnityEngine.MaterialPropertyBlock));
				UnityEngine.Rendering.ShadowCastingMode arg6 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.CheckObject(L, 7, typeof(UnityEngine.Rendering.ShadowCastingMode));
				bool arg7 = LuaDLL.luaL_checkboolean(L, 8);
				int arg8 = (int)LuaDLL.luaL_checknumber(L, 9);
				UnityEngine.Camera arg9 = (UnityEngine.Camera)ToLua.CheckObject(L, 10, typeof(UnityEngine.Camera));
				UnityEngine.Rendering.LightProbeUsage arg10 = (UnityEngine.Rendering.LightProbeUsage)ToLua.CheckObject(L, 11, typeof(UnityEngine.Rendering.LightProbeUsage));
				UnityEngine.LightProbeProxyVolume arg11 = (UnityEngine.LightProbeProxyVolume)ToLua.CheckObject(L, 12, typeof(UnityEngine.LightProbeProxyVolume));
				UnityEngine.Graphics.DrawMeshInstancedProcedural(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawMeshInstancedProcedural");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawMeshInstancedIndirect(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 5)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Bounds arg3 = ToLua.ToBounds(L, 4);
				UnityEngine.ComputeBuffer arg4 = (UnityEngine.ComputeBuffer)ToLua.CheckObject(L, 5, typeof(UnityEngine.ComputeBuffer));
				UnityEngine.Graphics.DrawMeshInstancedIndirect(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 6)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Bounds arg3 = ToLua.ToBounds(L, 4);
				UnityEngine.ComputeBuffer arg4 = (UnityEngine.ComputeBuffer)ToLua.CheckObject(L, 5, typeof(UnityEngine.ComputeBuffer));
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				UnityEngine.Graphics.DrawMeshInstancedIndirect(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 7)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Bounds arg3 = ToLua.ToBounds(L, 4);
				UnityEngine.ComputeBuffer arg4 = (UnityEngine.ComputeBuffer)ToLua.CheckObject(L, 5, typeof(UnityEngine.ComputeBuffer));
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject(L, 7, typeof(UnityEngine.MaterialPropertyBlock));
				UnityEngine.Graphics.DrawMeshInstancedIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 8)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Bounds arg3 = ToLua.ToBounds(L, 4);
				UnityEngine.ComputeBuffer arg4 = (UnityEngine.ComputeBuffer)ToLua.CheckObject(L, 5, typeof(UnityEngine.ComputeBuffer));
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject(L, 7, typeof(UnityEngine.MaterialPropertyBlock));
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.CheckObject(L, 8, typeof(UnityEngine.Rendering.ShadowCastingMode));
				UnityEngine.Graphics.DrawMeshInstancedIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else if (count == 9)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Bounds arg3 = ToLua.ToBounds(L, 4);
				UnityEngine.ComputeBuffer arg4 = (UnityEngine.ComputeBuffer)ToLua.CheckObject(L, 5, typeof(UnityEngine.ComputeBuffer));
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject(L, 7, typeof(UnityEngine.MaterialPropertyBlock));
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.CheckObject(L, 8, typeof(UnityEngine.Rendering.ShadowCastingMode));
				bool arg8 = LuaDLL.luaL_checkboolean(L, 9);
				UnityEngine.Graphics.DrawMeshInstancedIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
				return 0;
			}
			else if (count == 10)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Bounds arg3 = ToLua.ToBounds(L, 4);
				UnityEngine.ComputeBuffer arg4 = (UnityEngine.ComputeBuffer)ToLua.CheckObject(L, 5, typeof(UnityEngine.ComputeBuffer));
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject(L, 7, typeof(UnityEngine.MaterialPropertyBlock));
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.CheckObject(L, 8, typeof(UnityEngine.Rendering.ShadowCastingMode));
				bool arg8 = LuaDLL.luaL_checkboolean(L, 9);
				int arg9 = (int)LuaDLL.luaL_checknumber(L, 10);
				UnityEngine.Graphics.DrawMeshInstancedIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
				return 0;
			}
			else if (count == 11)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Bounds arg3 = ToLua.ToBounds(L, 4);
				UnityEngine.ComputeBuffer arg4 = (UnityEngine.ComputeBuffer)ToLua.CheckObject(L, 5, typeof(UnityEngine.ComputeBuffer));
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject(L, 7, typeof(UnityEngine.MaterialPropertyBlock));
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.CheckObject(L, 8, typeof(UnityEngine.Rendering.ShadowCastingMode));
				bool arg8 = LuaDLL.luaL_checkboolean(L, 9);
				int arg9 = (int)LuaDLL.luaL_checknumber(L, 10);
				UnityEngine.Camera arg10 = (UnityEngine.Camera)ToLua.CheckObject(L, 11, typeof(UnityEngine.Camera));
				UnityEngine.Graphics.DrawMeshInstancedIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
				return 0;
			}
			else if (count == 12)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Bounds arg3 = ToLua.ToBounds(L, 4);
				UnityEngine.ComputeBuffer arg4 = (UnityEngine.ComputeBuffer)ToLua.CheckObject(L, 5, typeof(UnityEngine.ComputeBuffer));
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject(L, 7, typeof(UnityEngine.MaterialPropertyBlock));
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.CheckObject(L, 8, typeof(UnityEngine.Rendering.ShadowCastingMode));
				bool arg8 = LuaDLL.luaL_checkboolean(L, 9);
				int arg9 = (int)LuaDLL.luaL_checknumber(L, 10);
				UnityEngine.Camera arg10 = (UnityEngine.Camera)ToLua.CheckObject(L, 11, typeof(UnityEngine.Camera));
				UnityEngine.Rendering.LightProbeUsage arg11 = (UnityEngine.Rendering.LightProbeUsage)ToLua.CheckObject(L, 12, typeof(UnityEngine.Rendering.LightProbeUsage));
				UnityEngine.Graphics.DrawMeshInstancedIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
				return 0;
			}
			else if (count == 13)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				UnityEngine.Bounds arg3 = ToLua.ToBounds(L, 4);
				UnityEngine.ComputeBuffer arg4 = (UnityEngine.ComputeBuffer)ToLua.CheckObject(L, 5, typeof(UnityEngine.ComputeBuffer));
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject(L, 7, typeof(UnityEngine.MaterialPropertyBlock));
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.CheckObject(L, 8, typeof(UnityEngine.Rendering.ShadowCastingMode));
				bool arg8 = LuaDLL.luaL_checkboolean(L, 9);
				int arg9 = (int)LuaDLL.luaL_checknumber(L, 10);
				UnityEngine.Camera arg10 = (UnityEngine.Camera)ToLua.CheckObject(L, 11, typeof(UnityEngine.Camera));
				UnityEngine.Rendering.LightProbeUsage arg11 = (UnityEngine.Rendering.LightProbeUsage)ToLua.CheckObject(L, 12, typeof(UnityEngine.Rendering.LightProbeUsage));
				UnityEngine.LightProbeProxyVolume arg12 = (UnityEngine.LightProbeProxyVolume)ToLua.CheckObject(L, 13, typeof(UnityEngine.LightProbeProxyVolume));
				UnityEngine.Graphics.DrawMeshInstancedIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawMeshInstancedIndirect");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawProceduralNow(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.MeshTopology arg0 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 1, typeof(UnityEngine.MeshTopology));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Graphics.DrawProceduralNow(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<int, int>(L, 2))
			{
				UnityEngine.MeshTopology arg0 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 1, typeof(UnityEngine.MeshTopology));
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.Graphics.DrawProceduralNow(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<UnityEngine.GraphicsBuffer, int>(L, 2))
			{
				UnityEngine.MeshTopology arg0 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 1, typeof(UnityEngine.MeshTopology));
				UnityEngine.GraphicsBuffer arg1 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.Graphics.DrawProceduralNow(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4)
			{
				UnityEngine.MeshTopology arg0 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 1, typeof(UnityEngine.MeshTopology));
				UnityEngine.GraphicsBuffer arg1 = (UnityEngine.GraphicsBuffer)ToLua.CheckObject(L, 2, typeof(UnityEngine.GraphicsBuffer));
				int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				UnityEngine.Graphics.DrawProceduralNow(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawProceduralNow");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawProceduralIndirectNow(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.MeshTopology arg0 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 1, typeof(UnityEngine.MeshTopology));
				UnityEngine.ComputeBuffer arg1 = (UnityEngine.ComputeBuffer)ToLua.CheckObject(L, 2, typeof(UnityEngine.ComputeBuffer));
				UnityEngine.Graphics.DrawProceduralIndirectNow(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<UnityEngine.ComputeBuffer, int>(L, 2))
			{
				UnityEngine.MeshTopology arg0 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 1, typeof(UnityEngine.MeshTopology));
				UnityEngine.ComputeBuffer arg1 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.Graphics.DrawProceduralIndirectNow(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<UnityEngine.GraphicsBuffer, UnityEngine.ComputeBuffer>(L, 2))
			{
				UnityEngine.MeshTopology arg0 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 1, typeof(UnityEngine.MeshTopology));
				UnityEngine.GraphicsBuffer arg1 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 2);
				UnityEngine.ComputeBuffer arg2 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 3);
				UnityEngine.Graphics.DrawProceduralIndirectNow(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4)
			{
				UnityEngine.MeshTopology arg0 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 1, typeof(UnityEngine.MeshTopology));
				UnityEngine.GraphicsBuffer arg1 = (UnityEngine.GraphicsBuffer)ToLua.CheckObject(L, 2, typeof(UnityEngine.GraphicsBuffer));
				UnityEngine.ComputeBuffer arg2 = (UnityEngine.ComputeBuffer)ToLua.CheckObject(L, 3, typeof(UnityEngine.ComputeBuffer));
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				UnityEngine.Graphics.DrawProceduralIndirectNow(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawProceduralIndirectNow");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawProcedural(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4)
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				UnityEngine.Graphics.DrawProcedural(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes<int, int>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Graphics.DrawProcedural(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes<UnityEngine.GraphicsBuffer, int>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				UnityEngine.GraphicsBuffer arg3 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Graphics.DrawProcedural(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes<int, int, UnityEngine.Camera>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				UnityEngine.Graphics.DrawProcedural(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes<UnityEngine.GraphicsBuffer, int, int>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				UnityEngine.GraphicsBuffer arg3 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.Graphics.DrawProcedural(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes<int, int, UnityEngine.Camera, UnityEngine.MaterialPropertyBlock>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Graphics.DrawProcedural(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes<UnityEngine.GraphicsBuffer, int, int, UnityEngine.Camera>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				UnityEngine.GraphicsBuffer arg3 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.Camera arg6 = (UnityEngine.Camera)ToLua.ToObject(L, 7);
				UnityEngine.Graphics.DrawProcedural(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes<int, int, UnityEngine.Camera, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 8);
				UnityEngine.Graphics.DrawProcedural(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes<UnityEngine.GraphicsBuffer, int, int, UnityEngine.Camera, UnityEngine.MaterialPropertyBlock>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				UnityEngine.GraphicsBuffer arg3 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.Camera arg6 = (UnityEngine.Camera)ToLua.ToObject(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				UnityEngine.Graphics.DrawProcedural(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes<int, int, UnityEngine.Camera, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				UnityEngine.Graphics.DrawProcedural(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes<UnityEngine.GraphicsBuffer, int, int, UnityEngine.Camera, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				UnityEngine.GraphicsBuffer arg3 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.Camera arg6 = (UnityEngine.Camera)ToLua.ToObject(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				UnityEngine.Rendering.ShadowCastingMode arg8 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 9);
				UnityEngine.Graphics.DrawProcedural(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
				return 0;
			}
			else if (count == 10 && TypeChecker.CheckTypes<int, int, UnityEngine.Camera, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool, int>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				int arg9 = (int)LuaDLL.lua_tonumber(L, 10);
				UnityEngine.Graphics.DrawProcedural(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
				return 0;
			}
			else if (count == 10 && TypeChecker.CheckTypes<UnityEngine.GraphicsBuffer, int, int, UnityEngine.Camera, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				UnityEngine.GraphicsBuffer arg3 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.Camera arg6 = (UnityEngine.Camera)ToLua.ToObject(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				UnityEngine.Rendering.ShadowCastingMode arg8 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 9);
				bool arg9 = LuaDLL.lua_toboolean(L, 10);
				UnityEngine.Graphics.DrawProcedural(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
				return 0;
			}
			else if (count == 11)
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				UnityEngine.GraphicsBuffer arg3 = (UnityEngine.GraphicsBuffer)ToLua.CheckObject(L, 4, typeof(UnityEngine.GraphicsBuffer));
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				UnityEngine.Camera arg6 = (UnityEngine.Camera)ToLua.CheckObject(L, 7, typeof(UnityEngine.Camera));
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject(L, 8, typeof(UnityEngine.MaterialPropertyBlock));
				UnityEngine.Rendering.ShadowCastingMode arg8 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.CheckObject(L, 9, typeof(UnityEngine.Rendering.ShadowCastingMode));
				bool arg9 = LuaDLL.luaL_checkboolean(L, 10);
				int arg10 = (int)LuaDLL.luaL_checknumber(L, 11);
				UnityEngine.Graphics.DrawProcedural(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawProcedural");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawProceduralIndirect(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4)
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				UnityEngine.ComputeBuffer arg3 = (UnityEngine.ComputeBuffer)ToLua.CheckObject(L, 4, typeof(UnityEngine.ComputeBuffer));
				UnityEngine.Graphics.DrawProceduralIndirect(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes<UnityEngine.ComputeBuffer, int>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				UnityEngine.ComputeBuffer arg3 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Graphics.DrawProceduralIndirect(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes<UnityEngine.GraphicsBuffer, UnityEngine.ComputeBuffer>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				UnityEngine.GraphicsBuffer arg3 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 4);
				UnityEngine.ComputeBuffer arg4 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 5);
				UnityEngine.Graphics.DrawProceduralIndirect(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes<UnityEngine.ComputeBuffer, int, UnityEngine.Camera>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				UnityEngine.ComputeBuffer arg3 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				UnityEngine.Graphics.DrawProceduralIndirect(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes<UnityEngine.GraphicsBuffer, UnityEngine.ComputeBuffer, int>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				UnityEngine.GraphicsBuffer arg3 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 4);
				UnityEngine.ComputeBuffer arg4 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.Graphics.DrawProceduralIndirect(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes<UnityEngine.ComputeBuffer, int, UnityEngine.Camera, UnityEngine.MaterialPropertyBlock>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				UnityEngine.ComputeBuffer arg3 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Graphics.DrawProceduralIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes<UnityEngine.GraphicsBuffer, UnityEngine.ComputeBuffer, int, UnityEngine.Camera>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				UnityEngine.GraphicsBuffer arg3 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 4);
				UnityEngine.ComputeBuffer arg4 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.Camera arg6 = (UnityEngine.Camera)ToLua.ToObject(L, 7);
				UnityEngine.Graphics.DrawProceduralIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes<UnityEngine.ComputeBuffer, int, UnityEngine.Camera, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				UnityEngine.ComputeBuffer arg3 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 8);
				UnityEngine.Graphics.DrawProceduralIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes<UnityEngine.GraphicsBuffer, UnityEngine.ComputeBuffer, int, UnityEngine.Camera, UnityEngine.MaterialPropertyBlock>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				UnityEngine.GraphicsBuffer arg3 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 4);
				UnityEngine.ComputeBuffer arg4 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.Camera arg6 = (UnityEngine.Camera)ToLua.ToObject(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				UnityEngine.Graphics.DrawProceduralIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes<UnityEngine.ComputeBuffer, int, UnityEngine.Camera, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				UnityEngine.ComputeBuffer arg3 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				UnityEngine.Graphics.DrawProceduralIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes<UnityEngine.GraphicsBuffer, UnityEngine.ComputeBuffer, int, UnityEngine.Camera, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				UnityEngine.GraphicsBuffer arg3 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 4);
				UnityEngine.ComputeBuffer arg4 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.Camera arg6 = (UnityEngine.Camera)ToLua.ToObject(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				UnityEngine.Rendering.ShadowCastingMode arg8 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 9);
				UnityEngine.Graphics.DrawProceduralIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
				return 0;
			}
			else if (count == 10 && TypeChecker.CheckTypes<UnityEngine.ComputeBuffer, int, UnityEngine.Camera, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool, int>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				UnityEngine.ComputeBuffer arg3 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				int arg9 = (int)LuaDLL.lua_tonumber(L, 10);
				UnityEngine.Graphics.DrawProceduralIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
				return 0;
			}
			else if (count == 10 && TypeChecker.CheckTypes<UnityEngine.GraphicsBuffer, UnityEngine.ComputeBuffer, int, UnityEngine.Camera, UnityEngine.MaterialPropertyBlock, UnityEngine.Rendering.ShadowCastingMode, bool>(L, 4))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				UnityEngine.GraphicsBuffer arg3 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 4);
				UnityEngine.ComputeBuffer arg4 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.Camera arg6 = (UnityEngine.Camera)ToLua.ToObject(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				UnityEngine.Rendering.ShadowCastingMode arg8 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 9);
				bool arg9 = LuaDLL.lua_toboolean(L, 10);
				UnityEngine.Graphics.DrawProceduralIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
				return 0;
			}
			else if (count == 11)
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)ToLua.CheckObject(L, 3, typeof(UnityEngine.MeshTopology));
				UnityEngine.GraphicsBuffer arg3 = (UnityEngine.GraphicsBuffer)ToLua.CheckObject(L, 4, typeof(UnityEngine.GraphicsBuffer));
				UnityEngine.ComputeBuffer arg4 = (UnityEngine.ComputeBuffer)ToLua.CheckObject(L, 5, typeof(UnityEngine.ComputeBuffer));
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				UnityEngine.Camera arg6 = (UnityEngine.Camera)ToLua.CheckObject(L, 7, typeof(UnityEngine.Camera));
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject(L, 8, typeof(UnityEngine.MaterialPropertyBlock));
				UnityEngine.Rendering.ShadowCastingMode arg8 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.CheckObject(L, 9, typeof(UnityEngine.Rendering.ShadowCastingMode));
				bool arg9 = LuaDLL.luaL_checkboolean(L, 10);
				int arg10 = (int)LuaDLL.luaL_checknumber(L, 11);
				UnityEngine.Graphics.DrawProceduralIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawProceduralIndirect");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Blit(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<UnityEngine.RenderTexture>(L, 2))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 1);
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 2);
				UnityEngine.Graphics.Blit(arg0, arg1);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<UnityEngine.Material>(L, 2))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 1);
				UnityEngine.Material arg1 = (UnityEngine.Material)ToLua.ToObject(L, 2);
				UnityEngine.Graphics.Blit(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<UnityEngine.Material, int>(L, 2))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 1);
				UnityEngine.Material arg1 = (UnityEngine.Material)ToLua.ToObject(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.Graphics.Blit(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<UnityEngine.RenderTexture, UnityEngine.Material>(L, 2))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 1);
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				UnityEngine.Graphics.Blit(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<UnityEngine.RenderTexture, int, int>(L, 2))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 1);
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Graphics.Blit(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<UnityEngine.Material, int, int>(L, 2))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 1);
				UnityEngine.Material arg1 = (UnityEngine.Material)ToLua.ToObject(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Graphics.Blit(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<UnityEngine.RenderTexture, UnityEngine.Material, int>(L, 2))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 1);
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Graphics.Blit(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<UnityEngine.RenderTexture, UnityEngine.Vector2, UnityEngine.Vector2>(L, 2))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 1);
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 2);
				UnityEngine.Vector2 arg2 = ToLua.ToVector2(L, 3);
				UnityEngine.Vector2 arg3 = ToLua.ToVector2(L, 4);
				UnityEngine.Graphics.Blit(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 5)
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 1);
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.CheckObject<UnityEngine.RenderTexture>(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 3);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				UnityEngine.Graphics.Blit(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 6)
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 1);
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.CheckObject<UnityEngine.RenderTexture>(L, 2);
				UnityEngine.Vector2 arg2 = ToLua.ToVector2(L, 3);
				UnityEngine.Vector2 arg3 = ToLua.ToVector2(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				UnityEngine.Graphics.Blit(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.Blit");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BlitMultiTap(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (TypeChecker.CheckTypes<UnityEngine.Texture, UnityEngine.RenderTexture, UnityEngine.Material, int>(L, 1) && TypeChecker.CheckParamsType<UnityEngine.Vector2>(L, 5, count - 4))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Vector2[] arg4 = ToLua.ToParamsObject<UnityEngine.Vector2>(L, 5, count - 4);
				UnityEngine.Graphics.BlitMultiTap(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (TypeChecker.CheckTypes<UnityEngine.Texture, UnityEngine.RenderTexture, UnityEngine.Material>(L, 1) && TypeChecker.CheckParamsType<UnityEngine.Vector2>(L, 4, count - 3))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				UnityEngine.Vector2[] arg3 = ToLua.ToParamsObject<UnityEngine.Vector2>(L, 4, count - 3);
				UnityEngine.Graphics.BlitMultiTap(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.BlitMultiTap");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_activeColorGamut(IntPtr L)
	{
		try
		{
			ToLua.Push(L, UnityEngine.Graphics.activeColorGamut);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_activeTier(IntPtr L)
	{
		try
		{
			ToLua.Push(L, UnityEngine.Graphics.activeTier);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_preserveFramebufferAlpha(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, UnityEngine.Graphics.preserveFramebufferAlpha);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_activeColorBuffer(IntPtr L)
	{
		try
		{
			ToLua.PushValue(L, UnityEngine.Graphics.activeColorBuffer);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_activeDepthBuffer(IntPtr L)
	{
		try
		{
			ToLua.PushValue(L, UnityEngine.Graphics.activeDepthBuffer);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_activeTier(IntPtr L)
	{
		try
		{
			UnityEngine.Rendering.GraphicsTier arg0 = (UnityEngine.Rendering.GraphicsTier)ToLua.CheckObject(L, 2, typeof(UnityEngine.Rendering.GraphicsTier));
			UnityEngine.Graphics.activeTier = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

