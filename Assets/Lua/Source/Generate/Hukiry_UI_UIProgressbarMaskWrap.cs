//this source code was auto-generated by tolua#, do not modify it
using System;
using Hukiry.UI;
using LuaInterface;

public class Hukiry_UI_UIProgressbarMaskWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Hukiry.UI.UIProgressbarMask), typeof(UnityEngine.UI.RectMask2D));
		L.RegFunction("DOFillAmount", DOFillAmount);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("ProgresssMax", get_ProgresssMax, set_ProgresssMax);
		L.RegVar("fillAmount", get_fillAmount, set_fillAmount);
		L.RegVar("fillMethod", get_fillMethod, set_fillMethod);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DOFillAmount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Hukiry.UI.UIProgressbarMask obj = (Hukiry.UI.UIProgressbarMask)ToLua.CheckObject<Hukiry.UI.UIProgressbarMask>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			DG.Tweening.Core.TweenerCore<float,float,DG.Tweening.Plugins.Options.FloatOptions> o = obj.DOFillAmount(arg0, arg1);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ProgresssMax(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Hukiry.UI.UIProgressbarMask obj = (Hukiry.UI.UIProgressbarMask)o;
			int ret = obj.ProgresssMax;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ProgresssMax on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fillAmount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Hukiry.UI.UIProgressbarMask obj = (Hukiry.UI.UIProgressbarMask)o;
			float ret = obj.fillAmount;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fillAmount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fillMethod(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Hukiry.UI.UIProgressbarMask obj = (Hukiry.UI.UIProgressbarMask)o;
			Hukiry.UI.UIProgressbarMask.FillMethod ret = obj.fillMethod;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fillMethod on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ProgresssMax(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Hukiry.UI.UIProgressbarMask obj = (Hukiry.UI.UIProgressbarMask)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ProgresssMax = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ProgresssMax on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fillAmount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Hukiry.UI.UIProgressbarMask obj = (Hukiry.UI.UIProgressbarMask)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.fillAmount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fillAmount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fillMethod(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Hukiry.UI.UIProgressbarMask obj = (Hukiry.UI.UIProgressbarMask)o;
			Hukiry.UI.UIProgressbarMask.FillMethod arg0 = (Hukiry.UI.UIProgressbarMask.FillMethod)ToLua.CheckObject(L, 2, typeof(Hukiry.UI.UIProgressbarMask.FillMethod));
			obj.fillMethod = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fillMethod on a nil value");
		}
	}
}

