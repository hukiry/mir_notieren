//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SpriteMeshInfoWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SpriteMeshInfo), null);
		L.RegFunction("GetSpriteUvs", GetSpriteUvs);
		L.RegFunction("New", _CreateSpriteMeshInfo);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("centerPos", get_centerPos, set_centerPos);
		L.RegVar("index", get_index, set_index);
		L.RegVar("sort", get_sort, set_sort);
		L.RegVar("spriteName", get_spriteName, set_spriteName);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSpriteMeshInfo(IntPtr L)
	{
		SpriteMeshInfo obj = new SpriteMeshInfo();
		ToLua.PushValue(L, obj);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSpriteUvs(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			SpriteMeshInfo obj = (SpriteMeshInfo)ToLua.CheckObject(L, 1, typeof(SpriteMeshInfo));
			UnityEngine.U2D.SpriteAtlas arg0 = (UnityEngine.U2D.SpriteAtlas)ToLua.CheckObject<UnityEngine.U2D.SpriteAtlas>(L, 2);
			float arg1;
			float arg2;
			UnityEngine.Vector2[] o = obj.GetSpriteUvs(arg0, out arg1, out arg2);
			ToLua.Push(L, o);
			LuaDLL.lua_pushnumber(L, arg1);
			LuaDLL.lua_pushnumber(L, arg2);
			ToLua.SetBack(L, 1, obj);
			return 3;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_centerPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SpriteMeshInfo obj = (SpriteMeshInfo)o;
			UnityEngine.Vector2 ret = obj.centerPos;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index centerPos on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_index(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SpriteMeshInfo obj = (SpriteMeshInfo)o;
			int ret = obj.index;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index index on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sort(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SpriteMeshInfo obj = (SpriteMeshInfo)o;
			int ret = obj.sort;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index sort on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_spriteName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SpriteMeshInfo obj = (SpriteMeshInfo)o;
			string ret = obj.spriteName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index spriteName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_centerPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SpriteMeshInfo obj = (SpriteMeshInfo)o;
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.centerPos = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index centerPos on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_index(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SpriteMeshInfo obj = (SpriteMeshInfo)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.index = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index index on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sort(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SpriteMeshInfo obj = (SpriteMeshInfo)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.sort = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index sort on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_spriteName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SpriteMeshInfo obj = (SpriteMeshInfo)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.spriteName = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index spriteName on a nil value");
		}
	}
}

