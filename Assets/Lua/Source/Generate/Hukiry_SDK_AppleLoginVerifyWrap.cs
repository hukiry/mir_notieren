//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Hukiry_SDK_AppleLoginVerifyWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Hukiry.SDK.AppleLoginVerify), typeof(System.Object));
		L.RegFunction("SetClient", SetClient);
		L.RegFunction("RequstToken", RequstToken);
		L.RegFunction("RequstRevoke", RequstRevoke);
		L.RegFunction("RequstKeys", RequstKeys);
		L.RegFunction("New", _CreateHukiry_SDK_AppleLoginVerify);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateHukiry_SDK_AppleLoginVerify(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Hukiry.SDK.AppleLoginVerify obj = new Hukiry.SDK.AppleLoginVerify();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Hukiry.SDK.AppleLoginVerify.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetClient(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Hukiry.SDK.AppleLoginVerify obj = (Hukiry.SDK.AppleLoginVerify)ToLua.CheckObject<Hukiry.SDK.AppleLoginVerify>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.SetClient(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RequstToken(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Hukiry.SDK.AppleLoginVerify obj = (Hukiry.SDK.AppleLoginVerify)ToLua.CheckObject<Hukiry.SDK.AppleLoginVerify>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			System.Action<bool,string> arg1 = (System.Action<bool,string>)ToLua.CheckDelegate<System.Action<bool,string>>(L, 3);
			obj.RequstToken(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RequstRevoke(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Hukiry.SDK.AppleLoginVerify obj = (Hukiry.SDK.AppleLoginVerify)ToLua.CheckObject<Hukiry.SDK.AppleLoginVerify>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			System.Action<bool,string> arg1 = (System.Action<bool,string>)ToLua.CheckDelegate<System.Action<bool,string>>(L, 3);
			obj.RequstRevoke(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RequstKeys(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Hukiry.SDK.AppleLoginVerify obj = (Hukiry.SDK.AppleLoginVerify)ToLua.CheckObject<Hukiry.SDK.AppleLoginVerify>(L, 1);
			System.Action<bool,string> arg0 = (System.Action<bool,string>)ToLua.CheckDelegate<System.Action<bool,string>>(L, 2);
			obj.RequstKeys(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

