//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Hukiry_HukirySupperTextWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Hukiry.HukirySupperText), typeof(UnityEngine.UI.Text));
		L.RegFunction("SetGradient", SetGradient);
		L.RegFunction("SetShadowStyle", SetShadowStyle);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("m_EnableHelp", get_m_EnableHelp, set_m_EnableHelp);
		L.RegVar("LineCount", get_LineCount, null);
		L.RegVar("OnHrefHandler", get_OnHrefHandler, set_OnHrefHandler);
		L.RegFunction("UnityEventHandler", Hukiry_HukirySupperText_UnityEventHandler);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetGradient(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Hukiry.HukirySupperText obj = (Hukiry.HukirySupperText)ToLua.CheckObject<Hukiry.HukirySupperText>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			UnityEngine.Color arg1 = ToLua.ToColor(L, 3);
			UnityEngine.Color arg2 = ToLua.ToColor(L, 4);
			obj.SetGradient(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetShadowStyle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Hukiry.HukirySupperText obj = (Hukiry.HukirySupperText)ToLua.CheckObject<Hukiry.HukirySupperText>(L, 1);
			obj.SetShadowStyle();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_EnableHelp(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Hukiry.HukirySupperText.m_EnableHelp);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LineCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Hukiry.HukirySupperText obj = (Hukiry.HukirySupperText)o;
			int ret = obj.LineCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LineCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnHrefHandler(IntPtr L)
	{
		ToLua.Push(L, new EventObject(typeof(Hukiry.HukirySupperText.UnityEventHandler)));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_EnableHelp(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Hukiry.HukirySupperText.m_EnableHelp = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnHrefHandler(IntPtr L)
	{
		try
		{
			Hukiry.HukirySupperText obj = (Hukiry.HukirySupperText)ToLua.CheckObject(L, 1, typeof(Hukiry.HukirySupperText));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'Hukiry.HukirySupperText.OnHrefHandler' can only appear on the left hand side of += or -= when used outside of the type 'Hukiry.HukirySupperText'");
			}

			if (arg0.op == EventOp.Add)
			{
				Hukiry.HukirySupperText.UnityEventHandler ev = (Hukiry.HukirySupperText.UnityEventHandler)arg0.func;
				obj.OnHrefHandler += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				Hukiry.HukirySupperText.UnityEventHandler ev = (Hukiry.HukirySupperText.UnityEventHandler)arg0.func;
				obj.OnHrefHandler -= ev;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Hukiry_HukirySupperText_UnityEventHandler(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<Hukiry.HukirySupperText.UnityEventHandler>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<Hukiry.HukirySupperText.UnityEventHandler>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

