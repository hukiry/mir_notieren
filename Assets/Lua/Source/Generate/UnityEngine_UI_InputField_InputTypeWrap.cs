//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_UI_InputField_InputTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UnityEngine.UI.InputField.InputType));
		L.RegVar("Standard", get_Standard, null);
		L.RegVar("AutoCorrect", get_AutoCorrect, null);
		L.RegVar("Password", get_Password, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<UnityEngine.UI.InputField.InputType>.Check = CheckType;
		StackTraits<UnityEngine.UI.InputField.InputType>.Push = Push;
	}

	static void Push(IntPtr L, UnityEngine.UI.InputField.InputType arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(UnityEngine.UI.InputField.InputType), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Standard(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.UI.InputField.InputType.Standard);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AutoCorrect(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.UI.InputField.InputType.AutoCorrect);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Password(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.UI.InputField.InputType.Password);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		UnityEngine.UI.InputField.InputType o = (UnityEngine.UI.InputField.InputType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

