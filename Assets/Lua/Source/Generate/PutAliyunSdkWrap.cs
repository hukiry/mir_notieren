//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class PutAliyunSdkWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("PutAliyunSdk");
		L.RegFunction("Init", Init);
		L.RegFunction("PutUploadUrl", PutUploadUrl);
		L.RegFunction("DeleteUploadUrl", DeleteUploadUrl);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			string arg0 = ToLua.CheckString(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			string arg2 = ToLua.CheckString(L, 3);
			string arg3 = ToLua.CheckString(L, 4);
			PutAliyunSdk.Init(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PutUploadUrl(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				PutAliyunSdk.PutUploadUrl(arg0, arg1);
				return 0;
			}
			else if (count == 3)
			{
				string arg0 = ToLua.CheckString(L, 1);
				byte[] arg1 = ToLua.CheckByteBuffer(L, 2);
				int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
				PutAliyunSdk.PutUploadUrl(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4)
			{
				string arg0 = ToLua.CheckString(L, 1);
				byte[] arg1 = ToLua.CheckByteBuffer(L, 2);
				int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
				System.Action<bool> arg3 = (System.Action<bool>)ToLua.CheckDelegate<System.Action<bool>>(L, 4);
				PutAliyunSdk.PutUploadUrl(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: PutAliyunSdk.PutUploadUrl");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeleteUploadUrl(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				PutAliyunSdk.DeleteUploadUrl(arg0);
				return 0;
			}
			else if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				System.Action<bool> arg1 = (System.Action<bool>)ToLua.CheckDelegate<System.Action<bool>>(L, 2);
				PutAliyunSdk.DeleteUploadUrl(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: PutAliyunSdk.DeleteUploadUrl");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

